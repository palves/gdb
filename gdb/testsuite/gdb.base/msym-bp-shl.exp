# Copyright 2020 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test that when setting breakpoints, a static function in a shared
# library does not mask out an unresolved plt location in the main
# binary, with and without debug info.

if {[skip_shlib_tests]} {
    return 0
}

standard_testfile msym-bp-shl-main.c msym-bp-shl-main-2.c msym-bp-shl-lib.c
set srcfile ${srcdir}/${subdir}/${srcfile}
set srcfile2 ${srcdir}/${subdir}/${srcfile2}
set libsrc ${srcdir}/${subdir}/${srcfile3}

proc test {debug} {
    global testfile binfile srcfile srcfile2 libsrc
    global decimal

    if {$debug} {
	set options "debug"
    } else {
	set options ""
    }

    set bin ${binfile}-$debug
    set lib [standard_output_file msym-bp-shl-lib-$debug.sl]

    set exec_opts [list $options shlib=${lib}]

    if { [gdb_compile_shlib $libsrc $lib $options] != ""
	 || [gdb_compile [list $srcfile $srcfile2] $bin \
		 executable $exec_opts] != ""} {
	untested "failed to compile"
	return
    }

    clean_restart $bin
    gdb_load_shlib $lib

    # Should find two locations: the static foo in the
    # msym-bp-shl-main-2 file, and <foo@plt>, both in the main binary.
    with_test_prefix "before run" {
	gdb_test "break foo" "\\(2 locations\\)"

	if {$debug} {
	    gdb_test "info breakpoint" \
		[multi_line \
		     ".*\.1.*<foo@plt.*>" \
		     ".*\.2.*in foo at .*msym-bp-shl-main-2.c:$decimal"]
	} else {
	    gdb_test "info breakpoint" \
		[multi_line \
		     ".*\.1.*<foo@plt.*>" \
		     ".*\.2.*<foo\\+$decimal>"]
	}
    }

    if ![runto_main] {
	fail "can't run to main"
	return
    }

    delete_breakpoints

    # Now should find two locations: the static foo in the
    # msym-bp-shl-main-2 file, and the extern foo in the shared
    # library.  <foo@plt> should be masked out.
    with_test_prefix "at main" {
	gdb_test "break foo" "\\(2 locations\\)"

	if {$debug} {
	    gdb_test "info breakpoint" \
		[multi_line \
		     ".*\.1.*in foo at .*msym-bp-shl-main-2.c:$decimal" \
		     ".*\.2.*in foo at .*msym-bp-shl-lib.c:$decimal"]
	} else {
	    gdb_test "info breakpoint" \
		".*\.1.*<foo\\+$decimal>\r\n.*\.2.*<foo\\+$decimal>"
	}
    }
}

foreach_with_prefix debug {0 1} {
    test $debug
}

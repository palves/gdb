#   Copyright 1995-1997, 1999, 2007-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test single stepping at the same time a signal that GDB considers a
# breakpoint trap (other than SIGTRAP) is caught.  On software
# single-step targets, GDB can't distinguish the generated signal from
# a real software single-step trap, if the signal is caught when the
# PC points at an address with a single-step breakpoint.

if [target_info exists gdb,nosignals] {
    verbose "Skipping step-into-sigill.exp because of nosignals."
    continue
}

standard_testfile .c

if {[prepare_for_testing $testfile.exp $testfile $srcfile {debug}]} {
    return -1
}

if ![runto_main] then {
   fail "Can't run to main"
   return -1
}

proc test_signal { signal } {
    with_test_prefix $signal {
	global testfile
	global gdb_prompt

	set have_sig [get_integer_valueof have_$signal 0]

	if { $have_sig == 0 } {
	    unsupported "signal not supported"
	    return
	}

	gdb_test "b gen_$signal"
	gdb_test "continue" "Breakpoint .*, gen_$signal.*"

	while { true } {
	    set test "stepi"
	    gdb_test_multiple "$test" "$test" {
		-re "received signal $signal.*$gdb_prompt $" {
		    pass "$test"
		    break
		}
		-re "done.*$gdb_prompt $" {
		    fail "$test"
		    break
		}
		-re "$gdb_prompt $" {
		    # Issue another step
		}
	    }
	}
    }
}

test_signal SIGILL
test_signal SIGEMT
test_signal SIGSEGV

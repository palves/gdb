# Copyright 2016-2017 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Make sure that if an inferior exits or is detached/killed, its
# watchpoints don't end up with stale locations, preventing resumption
# of other inferiors.

standard_testfile

if {[build_executable "failed to build" $testfile $srcfile {debug}]} {
    return -1
}

# The test proper.  DISPOSE indicates how to dispose of the fork
# child.  Can be either "kill", "detach", or "exit" (to continue it to
# normal exit).
proc do_test {} {
    global binfile
    global gdb_prompt

    clean_restart $binfile

    gdb_test "set follow-fork-mode child" ".*"

    if ![runto "after_setsid"] {
	fail "can't run to child function"
	return
    }

    set test "continue"
    gdb_test_multiple $test $test {
	-re "Continuing" {
	    pass $test
	}
    }

    set timeout 5

    set test "interrupt with ctrl-c"
    after 200 {send_gdb "\003"}
    gdb_test_multiple "" $test {
	-re "received signal SIGINT.*\r\n$gdb_prompt $" {
	    pass $test
	}
    }
}

do_test
